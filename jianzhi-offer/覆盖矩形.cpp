/*
我们可以用2*1的小矩形横着或者竖着去覆盖更大的矩形。请问用n个2*1的小矩形无重叠地覆盖一个2*n的大矩形，总共有多少种方法？
*/

/*
由于小矩形的尺寸是2×1，所以有大矩形为2×number的存在，那么我们第一步就可以有两种处理方式：
第一步如果选择竖方向填充，那么该问题的规模就缩减为对于剩余的2×（number-1）的大矩形的填充。
第一步如果选择横向填充填充，那么必须在另一行的同样位置填充（也就是摆了第一个，另一个的位置也被约束了，只能这么填充）。
那么该问题的规模就缩减为对于剩余的2×（number-2）的大矩形的填充.
所以可以推出：f(n) = f(n-1) + f(n-2)
*/

class Solution {
public:
    int rectCover(int number) {
        if(number < 1) return 0;
        int f0 = 0;
        int f1 = 1;
        int fn = f0 + f1;
        for(int i=2;i<=number;i++)
        {
            f0 = f1;
            f1 = fn;
            fn = (f0+f1);
        }
        return fn;
    }
};
